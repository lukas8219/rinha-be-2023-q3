version: '3.4'
services:
  app1: &app
    # image: lukas8219/rinha-be-2023-q3:latest
    build: .
    environment:
      DB_URL: "postgres://postgres:12345678@localhost:5432/postgres"
      DB_POOL: 45
      PINO_LOG_LEVEL: "debug"
      REQ_TIMEOUT: "2000"
      NODE_ENV: production
      CLUSTER: true
      CLUSTER_WORKERS: 4
      HTTP_PORT: 8080
    network_mode: host
    depends_on:
      - postgres
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '0.6GB'
  app2:
    <<: *app
    environment:
      DB_URL: "postgres://postgres:12345678@localhost:5432/postgres"
      DB_POOL: 45
      PINO_LOG_LEVEL: "debug"
      REQ_TIMEOUT: "2000"
      NODE_ENV: production
      CLUSTER: true
      CLUSTER_WORKERS: 4
      HTTP_PORT: 8081

  postgres:
    image: postgres
    command: postgres -c 'max_connections=450' -c 'log_error_verbosity=terse' -c 'client_min_messages=error'
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
    network_mode: host
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '1.5GB'

  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    network_mode: host
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.3GB'
